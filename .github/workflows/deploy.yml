name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    # Create a short SHA for tagging
    - name: Create short SHA
      id: short_sha
      run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"

    # Extract metadata for Docker
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository_owner }}/sundai-stocks
        tags: |
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
          type=raw,value=v${{ github.run_number }},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
          type=raw,value=${{ steps.short_sha.outputs.sha }},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          DASH_USERNAME=${{ secrets.DASH_USERNAME || 'sundai' }}
          DASH_PASSWORD_HASH=${{ secrets.DASH_PASSWORD_HASH || 'scrypt:32768:8:1$ZKCxkyqwu6ECGDP5$0fc9eca9ca1d67df5a514caba195b6842eb36e4a3ba1f7cc5fcbbe1d132200effc50eb067d5e8ffae966dedc2fece75e405cea0d7de0969df20224c5f763ef69' }}
          SECRET_KEY=${{ secrets.SECRET_KEY || 'b82d1eb7fd57cde0482f0e1da0916546ba453ee1dd6460e7' }}
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY || 'AIzaSyCrr6OzYwYvuiorPvmAAkYwb0lHQI8U7Wo' }}
          NEWS_API_KEY=${{ secrets.NEWS_API_KEY || '9b73205028734f2181dcda4f1b892d66' }}
          # Explicitly set DEBUG to False for production
          DEBUG=False